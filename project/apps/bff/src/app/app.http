@baseUrl = http://localhost:4000/api
@accessToken = {{login.response.body.$.accessToken}}
@refreshToken = {{login.response.body.$.refreshToken}}
@userId = {{newUser.response.body.$.id}}
@taskId = {{task.response.body.$.id}}

# Create a new user
# @name newUser
POST {{baseUrl}}/users/register HTTP/1.1
Content-Type: application/json

{
  "fullName": "Spartan Spartanych",
  "email": "sparta@gmail.com",
  "city": "Moscow",
  "password": "123456",
  "role": "Contractor",
  "dateBirth": "2022-02-22"
}

###

# Login user by email and password
# @name login
POST {{baseUrl}}/users/login HTTP/1.1
Content-Type: application/json

{
  "email": "sparta@gmail.com",
  "password": "123456"
}

###

# Get user by ID
GET {{baseUrl}}/users/6455dc009a24b824b6976f84 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get new JWT pair
POST {{baseUrl}}/users/refresh HTTP/1.1
Authorization: Bearer {{refreshToken}}

###

# Update password
PATCH {{baseUrl}}/users/{{userId}}/password HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "password": "123456",
  "newPassword": "098765"
}

###

# Update user data
PATCH {{baseUrl}}/users/{{userId}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "fullName": "Dinam Dinamych"
}

###

#Create task
# @name task
POST {{baseUrl}}/tasks/create HTTP/1.1
Content-Type: application/json

{
  "title": "Дверь мне запили. Срочно",
  "description": "Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.",
  "categoryId": 1,
  "price": 1000,
  "address": "переулок Дверной запил, 21",
  "city": "Moscow",
  "tags": ["дверь", "запилить"],
  "userId": "A123"
}

###

# Get task by ID
GET {{baseUrl}}/tasks/{{taskId}} HTTP/1.1

# Update task status by ID
PATCH {{baseUrl}}/tasks/{{taskId}}/status HTTP/1.1
Content-Type: application/json

{
  "userId": "A123",
  "status": "Canceled"
}

###

# Add response to task by ID
PATCH {{baseUrl}}/tasks/{{taskId}}/response HTTP/1.1
Content-Type: application/json

{
  "role": "Contractor",
  "userId": "B111"
}

###

# Add contractor to task by ID
PATCH {{baseUrl}}/tasks/{{taskId}}/contractor HTTP/1.1
Content-Type: application/json

{
  "role": "Contractor",
  "userId": "B111"
}

###

# Get tasks
GET {{baseUrl}}/tasks?sortDirection=desc&limit=2&page=1 HTTP/1.1

###