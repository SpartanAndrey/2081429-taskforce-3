@baseUrl = http://localhost:4000/api
@accessToken = {{login.response.body.$.accessToken}}
@refreshToken = {{login.response.body.$.refreshToken}}
@userId = {{newUser.response.body.$.id}}
@taskId = {{task.response.body.$.id}}

# Create a new user
# @name newUser
POST {{baseUrl}}/users/register HTTP/1.1
Content-Type: application/json

{
  "fullName": "Spartan Spartanych",
  "email": "sparta@gmail.com",
  "city": "Moscow",
  "password": "123456",
  "role": "Customer",
  "dateBirth": "2022-02-22"
}

###

# Login user by email and password
# @name login
POST {{baseUrl}}/users/login HTTP/1.1
Content-Type: application/json

{
  "email": "sparta@gmail.com",
  "password": "123456"
}

###

# Get user by ID
GET {{baseUrl}}/users/6455dc009a24b824b6976f84 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get new JWT pair
POST {{baseUrl}}/users/refresh HTTP/1.1
Authorization: Bearer {{refreshToken}}

###

# Update password
PATCH {{baseUrl}}/users/{{userId}}/password HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "password": "123456",
  "newPassword": "098765"
}

###

# Update user data
PATCH {{baseUrl}}/users/{{userId}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "fullName": "Dinam Dinamych"
}

###

#Create task
# @name task
POST {{baseUrl}}/tasks/create HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "Дверь мне запили. Срочно",
  "description": "Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.Запили дверь.",
  "categoryId": 1,
  "price": 1000,
  "address": "переулок Дверной запил, 21",
  "city": "Moscow",
  "tags": ["дверь", "запилить"]
}

###

# Create a new category
POST {{baseUrl}}/tasks/category/create HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "Запил"
}

###

# Get task by ID
GET {{baseUrl}}/tasks/5/data HTTP/1.1

###

# Update task status by ID
PATCH {{baseUrl}}/tasks/{{taskId}}/status HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "status": "Canceled"
}

###

# Add response to task by ID
PATCH {{baseUrl}}/tasks/{{taskId}}/response HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

###

# Add contractor to task by ID
PATCH {{baseUrl}}/tasks/{{taskId}}/contractor HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "contractorId": "645bb9359724d260dd25b7e1"
}

###

# Get tasks
GET {{baseUrl}}/tasks/all HTTP/1.1

###

# Get new tasks
GET {{baseUrl}}/tasks/new HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get customer tasks
GET {{baseUrl}}/tasks/customer/my?sortDirection=desc&limit=2&page=1 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get contractor tasks
GET {{baseUrl}}/tasks/contractor/my?sortDirection=desc&limit=2&page=1 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Delete task by ID
DELETE {{baseUrl}}/tasks/8 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Create comment
POST {{baseUrl}}/comments/create HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "comment": "Изи пизи лемон сквизи",
  "taskId": 5
}

###

#Delete comment by ID
DELETE {{baseUrl}}/comments/4 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get comments
GET {{baseUrl}}/comments/task/1 HTTP/1.1

###

#Create review
POST {{baseUrl}}/reviews/create HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "review": "Нраица, очень нраица. Рататаратараатататататататттаататататт",
  "taskId": 5,
  "contractorId": "6455dc009a24b824b6976f84",
  "rating": 4
}

###